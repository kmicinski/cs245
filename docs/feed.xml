<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS245</title>
    <description>(Spring '19) Principles of Programming Languages (CMSC245 at Haverford College)</description>
    <link>http://kmicinski.com/cs245/</link>
    <atom:link href="http://kmicinski.com/cs245/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 21 Apr 2019 21:37:09 -0400</pubDate>
    <lastBuildDate>Sun, 21 Apr 2019 21:37:09 -0400</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Project 1: C++ Memory Management</title>
        <description>&lt;p&gt;(Posted as &lt;code class=&quot;highlighter-rouge&quot;&gt;p1&lt;/code&gt; on the autograder.)&lt;/p&gt;

&lt;p&gt;This project will develop your skills on structuring object-oriented
software via class hierarchies.&lt;/p&gt;

&lt;p&gt;This project has you build an array implementation that gains
efficiency by doubling the array size (rather than just extending by
1) when the array needs to be extended. This will give you
implementation &lt;a href=&quot;https://stackoverflow.com/questions/200384/constant-amortized-time&quot;&gt;constant amortized insertion
time&lt;/a&gt;
time. I.e., if you perform &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; insertions, the runtime will be of
O(n), rather than O(n^2).&lt;/p&gt;

&lt;p&gt;This project contains a few files, each implementing classes in a
class hierarchy you will flesh out:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IArray.h&lt;/code&gt; ‚Äì This is an interface. Although C++ does not
technically have an &lt;code class=&quot;highlighter-rouge&quot;&gt;interface&lt;/code&gt; keyword (as in Java), the term
‚Äúinterface‚Äù refers to a class which has no concrete method
implementations (i.e., every method is pure virtual) and contains no
data members. You do not need to modify this file, but you should
read it to get an idea of how the rest of the project works.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AArray.h&lt;/code&gt; ‚Äì An abstract class (one which contains a mix of
unimplemented and concrete methods) that implements a few methods
using other methods (some of which are undefined). TODO: Extend
&lt;code class=&quot;highlighter-rouge&quot;&gt;AArray.h&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CArray.h&lt;/code&gt; ‚Äì A slow (i.e., not-doubling-size) implementation of
resizing arrays that will give O(n^2) time for &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; insertions. TODO:
Extend &lt;code class=&quot;highlighter-rouge&quot;&gt;CArray.h&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SArray.h&lt;/code&gt; ‚Äì A faster (doubling-size) implementation of resizing
arrays that will give O(n) time for &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; insertions.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your job is to implement these last three classes.&lt;/p&gt;

&lt;p&gt;You will need to read about:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Exceptions and try&lt;/li&gt;
  &lt;li&gt;Abstract classes&lt;/li&gt;
  &lt;li&gt;Virtual methods&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 01 Feb 2019 00:00:00 -0500</pubDate>
        <link>http://kmicinski.com/cs245/projects/1</link>
        <guid isPermaLink="true">http://kmicinski.com/cs245/projects/1</guid>
        
        
        <category>assignment</category>
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>Project 0: C++ Intro and Association Lists</title>
        <description>&lt;p&gt;In this project you will be implementing association lists in
C++. This project will give you some basic experience with building
data structures in C++ (one of its most common uses). This will likely
require that you do some reading on your own to understand how C++
classes work.&lt;/p&gt;

&lt;h2 id=&quot;getting-the-project&quot;&gt;Getting the project&lt;/h2&gt;

&lt;p&gt;Follow the steps at the &lt;a href=&quot;https://www.youtube.com/watch?v=w7wLvLb2qCw&amp;amp;t=1018s&quot;&gt;end of the previous
video&lt;/a&gt;. Get the
autograder by cloning the submission repo
&lt;a href=&quot;https://github.com/kmicinski/submit&quot;&gt;here&lt;/a&gt;. Be sure to read the
instructions in that repository (in particular, read about how to make
sure it‚Äôs working).&lt;/p&gt;

&lt;p&gt;Let‚Äôs say that you have the autograder submit script stored in
&lt;code class=&quot;highlighter-rouge&quot;&gt;~/projects/submit/submit.py&lt;/code&gt;. Then you will create a new directory,
&lt;code class=&quot;highlighter-rouge&quot;&gt;p0&lt;/code&gt;, for this project somewhere. Here‚Äôs what I did to set up the
projects (note that I put them in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/projects/cs245-playground&lt;/code&gt;, I
recommend you just use a folder like ~/projects/cs245/p0`):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Kristophers-Air:projects kmicinski$ mkdir cs245-playground
Kristophers-Air:projects kmicinski$ cd cs245-playground/
Kristophers-Air:cs245-playground kmicinski$ mkdir p0
Kristophers-Air:cs245-playground kmicinski$ cd p0/
Kristophers-Air:p0 kmicinski$ cp ~/projects/submit/submit.py .
Kristophers-Air:p0 kmicinski$ python3 submit.py

   _____       __              __ __
  / ___/__  __/ /_  ____ ___  /_/ /_
  \__ \/ / / / __ \/ __ `__ \/ / __/
 ___/ / /_/ / /_/ / / / / / / / /_
/____/\____/_____/_/ /_/ /_/_/\__/   (by Kris+Tom)

? This directory is empty, would you like to initialize a new project?
  Yes
&amp;gt;&amp;gt;&amp;gt; Initializing `credentials` and `.gitignore` files &amp;lt;&amp;lt;&amp;lt;

    Note: it is very important that you do not do not
    distribute the `credentials` file. It stores your username and
    password. Please avoid sending it to anyone (doing so will be
    considered a violation of the honor code) or checking it into
    git.
? What is your username?  ktest
? What is your password?  **********
Verifying password...
&amp;gt;&amp;gt;&amp;gt; Login successful! &amp;lt;&amp;lt;&amp;lt;
Downloading available projects...
&amp;gt;&amp;gt;&amp;gt; Here are the available projects for your course &amp;lt;&amp;lt;&amp;lt;

    You must select the project whose shortname is the same as the
    name of this directory. If you want to work on a project not
    listed here (e.g., `proj0`), you must crate an empty directory
    with that name and run `submit.py` from that directory.
? Here are the available assignments, confirm you will select the curr
&amp;gt;&amp;gt;&amp;gt; Downloading starter files... &amp;lt;&amp;lt;&amp;lt;
&amp;gt;&amp;gt;&amp;gt; Unpacking starter files... &amp;lt;&amp;lt;&amp;lt;
Executing tar xvvf starter.tar.gz; rm starter.tar.gz
üéâüéâüéâ Starter files now ready! üéâüéâüéâ

     You are now all set up. We also recommend creating a (private) git
     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;completing-the-project&quot;&gt;Completing the project&lt;/h2&gt;

&lt;p&gt;Project instructions are given in the top of file
&lt;code class=&quot;highlighter-rouge&quot;&gt;AssocList.h&lt;/code&gt;. Please read the instructions there and complete the
methods marked &lt;code class=&quot;highlighter-rouge&quot;&gt;TODO&lt;/code&gt; in the file. The purpose of the lab is to have
you implement association lists: key/value maps based on lists of
(key,value) pairs.&lt;/p&gt;

&lt;h2 id=&quot;running-the-lab-yourself&quot;&gt;Running the lab yourself&lt;/h2&gt;

&lt;p&gt;If you want to test your program as you go, you first need to compile
a test. Each test file is written as one of the file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;tests&lt;/code&gt;
folder. You are encouraged to write your own, and the project includes
secret tests (that you won‚Äôt be given)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Compile the test and create file output
clang++ -std=c++14 -Wall -o ./output ./tests/&amp;lt;testname&amp;gt;.cpp
# Run the test
./output
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 20 Jan 2019 00:00:00 -0500</pubDate>
        <link>http://kmicinski.com/cs245/projects/0</link>
        <guid isPermaLink="true">http://kmicinski.com/cs245/projects/0</guid>
        
        
        <category>assignment</category>
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>Lab 0: Autograder Setup and Intro to C++</title>
        <description>&lt;p&gt;This lab will be graded via the autograder. You must email me to get
your autograder credentials.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-a-vm&quot;&gt;Setting up a VM&lt;/h2&gt;

&lt;p&gt;If you are on Windows or want to set up a virtual machine, &lt;a href=&quot;https://www.youtube.com/watch?v=w7wLvLb2qCw&amp;amp;t=1018s&quot;&gt;watch the
video here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are using Mac OSX consider setting up
&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;‚ÄìI use it and it is often very simple.&lt;/p&gt;

&lt;h2 id=&quot;getting-the-autograder&quot;&gt;Getting the autograder&lt;/h2&gt;

&lt;p&gt;Follow the steps at the &lt;a href=&quot;https://www.youtube.com/watch?v=w7wLvLb2qCw&amp;amp;t=1018s&quot;&gt;end of the previous
video&lt;/a&gt;. Get the
autograder by cloning the submission repo
&lt;a href=&quot;https://github.com/kmicinski/submit&quot;&gt;here&lt;/a&gt;. Be sure to read the
instructions in that repository (in particular, read about how to make
sure it‚Äôs working).&lt;/p&gt;

&lt;h2 id=&quot;get-lab0&quot;&gt;Get lab0&lt;/h2&gt;

&lt;p&gt;Create a &lt;em&gt;new&lt;/em&gt; directory named &lt;code class=&quot;highlighter-rouge&quot;&gt;lab0&lt;/code&gt; somewhere on your system (e.g.,
&lt;code class=&quot;highlighter-rouge&quot;&gt;~/projects/lab0&lt;/code&gt;) and copy submit.py into that directory. Then run
submit.py and follow the steps it shows. You will need your
credentials (again, you get those by emailing me).&lt;/p&gt;

&lt;p&gt;The autograder uses the directory name to decide which project to
download, so if you want to be working on lab 0, make sure your
directory is named &lt;code class=&quot;highlighter-rouge&quot;&gt;lab0&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;completing-the-lab&quot;&gt;Completing the lab&lt;/h2&gt;

&lt;p&gt;The task in the lab asks you to reverse an array. This should not be
too hard to figure out, and I show hints of it if you watch the intro
to C++ video. Basically, you want to loop over half the array and
exchange things at the right positions. As a hint, division in C++
truncates down (so &lt;code class=&quot;highlighter-rouge&quot;&gt;3/2 == 1&lt;/code&gt; for integers).&lt;/p&gt;

&lt;p&gt;If you need more help completing your lab, please be sure to read Part
1 of the &lt;a href=&quot;https://isocpp.org/tour&quot;&gt;C++ Tour&lt;/a&gt; (book available as free
PDF).&lt;/p&gt;

&lt;h2 id=&quot;running-the-lab-yourself&quot;&gt;Running the lab yourself&lt;/h2&gt;

&lt;p&gt;If you want to test your program as you go, you first need to compile
it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Compile to a binary file named reverse
clang++ reverse.cpp -o reverse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then run via‚Ä¶&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Actually run reverse
./reverse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then you can type in a list of numbers. To end your typing type in
control-D (i.e., hit D while holding down control). Your program will
then calculate the output and print it.&lt;/p&gt;

&lt;p&gt;You can also add extra tests of your own. Feel free to look at
&lt;code class=&quot;highlighter-rouge&quot;&gt;test.py&lt;/code&gt; to see how the tests are being run.&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Jan 2019 00:00:00 -0500</pubDate>
        <link>http://kmicinski.com/cs245/labs/0</link>
        <guid isPermaLink="true">http://kmicinski.com/cs245/labs/0</guid>
        
        
        <category>assignment</category>
        
      </item>
    
      <item>
        <title>Video: Setting up a VM for CS245</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=w7wLvLb2qCw&quot;&gt;Watch the video here&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Jan 2019 00:00:00 -0500</pubDate>
        <link>http://kmicinski.com/cs245/videos/vm</link>
        <guid isPermaLink="true">http://kmicinski.com/cs245/videos/vm</guid>
        
        
      </item>
    
      <item>
        <title>Introduction to CS245</title>
        <description>&lt;p&gt;Welcome to CS245! I‚Äôm excited to have you in the course. There are a
few logistical notes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;If you have a Microsoft Windows machine, please watch the following
video on &lt;a href=&quot;https://www.youtube.com/watch?v=w7wLvLb2qCw&quot;&gt;how to set up a VirtualBox environment and the
autograder&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Email me &lt;strong&gt;immediately&lt;/strong&gt; to get your account credentials for the
autograder. In your email please let me know when you plan to start
lab 0.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Please watch the &lt;a href=&quot;https://www.youtube.com/watch?v=doUVMwJhC1M&amp;amp;t=28s&quot;&gt;first video lecture on
C++&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The first lab is due &lt;strong&gt;soon&lt;/strong&gt;: the first day of class. The answer to
the first lab should not take more than 3-10 lines of code, and you
should be able to do it after watching the first video lecture.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 19 Jan 2019 00:00:00 -0500</pubDate>
        <link>http://kmicinski.com/cs245/intro</link>
        <guid isPermaLink="true">http://kmicinski.com/cs245/intro</guid>
        
        
      </item>
    
      <item>
        <title>Video Lecture: Introduction to C++</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=doUVMwJhC1M&amp;amp;t=28s&quot;&gt;Watch the video here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kmicinski/cs245-examples&quot;&gt;Link to the examples repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should be able to clone the example code by doing:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/kmicinski/cs245-examples.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When changes to this repository are pushed, you can then sync then
with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 19 Jan 2019 00:00:00 -0500</pubDate>
        <link>http://kmicinski.com/cs245/videolectures/1</link>
        <guid isPermaLink="true">http://kmicinski.com/cs245/videolectures/1</guid>
        
        
      </item>
    
  </channel>
</rss>
